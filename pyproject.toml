[project]
name = "lab-gen-api"
version = "0.2.0"
description = "DVLA Emerging Tech Lab Generative AI project"
requires-python = ">=3.11"
dependencies = [
    "anthropic>=0.49.0",
    "azure-appconfiguration>=1.7.1",
    "azure-cosmos>=4.9.0",
    "azure-monitor-opentelemetry>=1.6.5",
    "boto3>=1.37.16",
    "fastapi>=0.115.11",
    "huggingface-hub>=0.29.3",
    "langchain-anthropic>=0.3.10",
    "langchain-aws>=0.2.16",
    "langchain-community>=0.3.20",
    "langchain-core>=0.3.46",
    "langchain-google-vertexai>=2.0.15",
    "langchain-mistralai>=0.2.8",
    "langchain-openai>=0.3.9",
    "langfuse>=2.60.0",
    "langsmith>=0.3.18",
    "loguru>=0.7.3",
    "openai>=1.67.0",
    "opentelemetry-api>=1.31.1",
    "opentelemetry-exporter-otlp>=1.31.1",
    "opentelemetry-instrumentation>=0.52b1",
    "opentelemetry-instrumentation-fastapi>=0.52b1",
    "opentelemetry-instrumentation-logging>=0.52b1",
    "opentelemetry-sdk>=1.31.1",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.8.1",
    "python-jose[cryptography]>=3.4.0",
    "python-multipart>=0.0.20",
    "slowapi>=0.1.9",
    "tiktoken>=0.9.0",
    "transformers>=4.49.0",
    "ujson>=5.10.0",
    "uvicorn[standard]>=0.34.0",
]

[dependency-groups]
dev = [
    "autoflake>=2.3.1",
    "black>=25.1.0",
    "devtools>=0.12.2",
    "isort>=6.0.1",
    "mypy>=1.15.0",
    "mysql-connector-python>=9.0.0",
    "pre-commit>=4.2.0",
    "python-semantic-release>=9.21.0",
    "ruff>=0.11.0",
]
test = [
    "anyio>=4.9.0",
    "httpx>=0.28.1",
    "nltk>=3.9.1",
    "pytest>=8.3.5",
    "pytest-azurepipelines>=1.0.5",
    "pytest-cov>=6.0.0",
    "pytest-env>=1.1.5",
    "textstat>=0.7.5",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
default-groups = ["dev", "test"]

[tool.hatch.build.targets.wheel]
packages = ["lab_gen"]

[tool.isort]
line_length=120
profile = "black"
multi_line_output = 3
src_paths = ["lab_gen",]

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true

[tool.black]
line-length = 120
target-version = ["py310", "py311"]
preview = true
color = true

[tool.ruff]
lint.select = ["ALL"]
lint.ignore = [
    "ANN101", # pydocstyle - Missing type annotation for `self` in method
    "D100",  # pydocstyle - missing docstring in public module
    "D104",  # pydocstyle - missing docstring in public package
    "D107",  # pydocstyle - missing docstring in `__init__`
    "D203",  # one-blank-line-before-class conflicts with D211
    "D212",  # multi-line-summary-first-line conflicts with D213
    "PT001", # no need to removing unnecessary parentheses
    "PT023", # no need to removing unnecessary parentheses
]
line-length = 120
target-version = "py311"

[tool.ruff.lint.per-file-ignores]
"lab_gen/tests/*/*.py" = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
case-sensitive = true
lines-between-types = 1
lines-after-imports = 2

[tool.pytest.ini_options]
testpaths = ["lab_gen/tests/unit"]
addopts = "-ra --cov --cov-report=xml"
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]
env = [
    "LAB_GEN_ENVIRONMENT=pytest",
    "AZURE_APP_API_KEY=pytest_key",
    "R:AZURE_MODELS=[{\"provider\": \"AZURE\",\"variant\": \"GENERAL\",\"family\": \"GPT\",\"identifier\": \"gpt-35-1106\",\"description\": \"OpenAI GPT-3.5 Turbo powered\", \"location\":\"UK\",\"config\": {\"AZURE_OPENAI_API_KEY\": \"ef1\", \"AZURE_OPENAI_ENDPOINT\": \"test-openai-service.openai.azure.com\",\"AZURE_OPENAI_API_VERSION\": \"2023-07-01-preview\"}}, {\"provider\": \"BEDROCK\",\"variant\": \"ADVANCED\",\"family\": \"CLAUDE\",\"identifier\": \"anthropic.claude-instant-v1\",\"description\": \"anthropic.claude-instant\", \"location\": \"Frankfurt\",\"config\": {\"AWS_REGION\": \"eu-central-1\",\"AWS_ACCESS_KEY_ID\": \"IMVZ111111\",\"AWS_SECRET_ACCESS_KEY\": \"3cSofg111111\"}}]"
]

[tool.coverage.report]
show_missing = true
skip_covered = true
omit = ["**/__init__.py", "**/tests/*", "*/conftest.py"]
exclude_lines = [
    'raise',
]

[tool.bandit]
exclude_dirs = ["tests", "dist"]

[tool.semantic_release]
version_toml = [
    "pyproject.toml:project.version:nf",
]
remote.domain = "https://dev.azure.com/"
changelog.template_dir = "release_templates"

[tool.semantic_release.branches.main]
match = "main"
prerelease = false

[tool.semantic_release.branches."New Features"]
match = "feature.\\w+"
prerelease = true
prerelease_token = "alpha"
